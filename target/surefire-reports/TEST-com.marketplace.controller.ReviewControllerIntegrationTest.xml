<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.marketplace.controller.ReviewControllerIntegrationTest" time="3.12" tests="4" errors="4" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="17"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/Users/habimanaflorbert/Documents/spring_boot_projects/online_marketplace_backend/target/test-classes:/Users/habimanaflorbert/Documents/spring_boot_projects/online_marketplace_backend/target/classes:/Users/habimanaflorbert/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.2.5/spring-boot-starter-web-3.2.5.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/boot/spring-boot-starter/3.2.5/spring-boot-starter-3.2.5.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/boot/spring-boot/3.2.5/spring-boot-3.2.5.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.2.5/spring-boot-autoconfigure-3.2.5.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.2.5/spring-boot-starter-logging-3.2.5.jar:/Users/habimanaflorbert/.m2/repository/ch/qos/logback/logback-classic/1.4.14/logback-classic-1.4.14.jar:/Users/habimanaflorbert/.m2/repository/ch/qos/logback/logback-core/1.4.14/logback-core-1.4.14.jar:/Users/habimanaflorbert/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.21.1/log4j-to-slf4j-2.21.1.jar:/Users/habimanaflorbert/.m2/repository/org/apache/logging/log4j/log4j-api/2.21.1/log4j-api-2.21.1.jar:/Users/habimanaflorbert/.m2/repository/org/slf4j/jul-to-slf4j/2.0.13/jul-to-slf4j-2.0.13.jar:/Users/habimanaflorbert/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/habimanaflorbert/.m2/repository/org/yaml/snakeyaml/2.2/snakeyaml-2.2.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.2.5/spring-boot-starter-json-3.2.5.jar:/Users/habimanaflorbert/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.4/jackson-datatype-jdk8-2.15.4.jar:/Users/habimanaflorbert/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.4/jackson-datatype-jsr310-2.15.4.jar:/Users/habimanaflorbert/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.15.4/jackson-module-parameter-names-2.15.4.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.2.5/spring-boot-starter-tomcat-3.2.5.jar:/Users/habimanaflorbert/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.20/tomcat-embed-core-10.1.20.jar:/Users/habimanaflorbert/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.20/tomcat-embed-websocket-10.1.20.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/spring-web/6.1.6/spring-web-6.1.6.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/spring-beans/6.1.6/spring-beans-6.1.6.jar:/Users/habimanaflorbert/.m2/repository/io/micrometer/micrometer-observation/1.12.5/micrometer-observation-1.12.5.jar:/Users/habimanaflorbert/.m2/repository/io/micrometer/micrometer-commons/1.12.5/micrometer-commons-1.12.5.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/spring-webmvc/6.1.6/spring-webmvc-6.1.6.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/spring-context/6.1.6/spring-context-6.1.6.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/spring-expression/6.1.6/spring-expression-6.1.6.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.2.5/spring-boot-starter-data-jpa-3.2.5.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/boot/spring-boot-starter-aop/3.2.5/spring-boot-starter-aop-3.2.5.jar:/Users/habimanaflorbert/.m2/repository/org/aspectj/aspectjweaver/1.9.22/aspectjweaver-1.9.22.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.2.5/spring-boot-starter-jdbc-3.2.5.jar:/Users/habimanaflorbert/.m2/repository/com/zaxxer/HikariCP/5.0.1/HikariCP-5.0.1.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/spring-jdbc/6.1.6/spring-jdbc-6.1.6.jar:/Users/habimanaflorbert/.m2/repository/org/hibernate/orm/hibernate-core/6.4.4.Final/hibernate-core-6.4.4.Final.jar:/Users/habimanaflorbert/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/habimanaflorbert/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/habimanaflorbert/.m2/repository/org/jboss/logging/jboss-logging/3.5.3.Final/jboss-logging-3.5.3.Final.jar:/Users/habimanaflorbert/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/habimanaflorbert/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/habimanaflorbert/.m2/repository/com/fasterxml/classmate/1.6.0/classmate-1.6.0.jar:/Users/habimanaflorbert/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.5/jaxb-runtime-4.0.5.jar:/Users/habimanaflorbert/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.5/jaxb-core-4.0.5.jar:/Users/habimanaflorbert/.m2/repository/org/glassfish/jaxb/txw2/4.0.5/txw2-4.0.5.jar:/Users/habimanaflorbert/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/Users/habimanaflorbert/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/habimanaflorbert/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/data/spring-data-jpa/3.2.5/spring-data-jpa-3.2.5.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/data/spring-data-commons/3.2.5/spring-data-commons-3.2.5.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/spring-orm/6.1.6/spring-orm-6.1.6.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/spring-tx/6.1.6/spring-tx-6.1.6.jar:/Users/habimanaflorbert/.m2/repository/org/slf4j/slf4j-api/2.0.13/slf4j-api-2.0.13.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/spring-aspects/6.1.6/spring-aspects-6.1.6.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/boot/spring-boot-starter-security/3.2.5/spring-boot-starter-security-3.2.5.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/spring-aop/6.1.6/spring-aop-6.1.6.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/security/spring-security-config/6.2.4/spring-security-config-6.2.4.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/security/spring-security-web/6.2.4/spring-security-web-6.2.4.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.2.5/spring-boot-starter-validation-3.2.5.jar:/Users/habimanaflorbert/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.20/tomcat-embed-el-10.1.20.jar:/Users/habimanaflorbert/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.1.Final/hibernate-validator-8.0.1.Final.jar:/Users/habimanaflorbert/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/boot/spring-boot-starter-mail/3.2.5/spring-boot-starter-mail-3.2.5.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/spring-context-support/6.1.6/spring-context-support-6.1.6.jar:/Users/habimanaflorbert/.m2/repository/org/eclipse/angus/jakarta.mail/2.0.3/jakarta.mail-2.0.3.jar:/Users/habimanaflorbert/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.3/jakarta.activation-api-2.1.3.jar:/Users/habimanaflorbert/.m2/repository/org/eclipse/angus/angus-activation/2.0.2/angus-activation-2.0.2.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/boot/spring-boot-starter-amqp/3.2.5/spring-boot-starter-amqp-3.2.5.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/spring-messaging/6.1.6/spring-messaging-6.1.6.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/amqp/spring-rabbit/3.1.4/spring-rabbit-3.1.4.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/amqp/spring-amqp/3.1.4/spring-amqp-3.1.4.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/retry/spring-retry/2.0.5/spring-retry-2.0.5.jar:/Users/habimanaflorbert/.m2/repository/com/rabbitmq/amqp-client/5.19.0/amqp-client-5.19.0.jar:/Users/habimanaflorbert/.m2/repository/org/postgresql/postgresql/42.6.2/postgresql-42.6.2.jar:/Users/habimanaflorbert/.m2/repository/org/checkerframework/checker-qual/3.31.0/checker-qual-3.31.0.jar:/Users/habimanaflorbert/.m2/repository/io/jsonwebtoken/jjwt-api/0.11.5/jjwt-api-0.11.5.jar:/Users/habimanaflorbert/.m2/repository/io/jsonwebtoken/jjwt-impl/0.11.5/jjwt-impl-0.11.5.jar:/Users/habimanaflorbert/.m2/repository/io/jsonwebtoken/jjwt-jackson/0.11.5/jjwt-jackson-0.11.5.jar:/Users/habimanaflorbert/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.4/jackson-databind-2.15.4.jar:/Users/habimanaflorbert/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.4/jackson-annotations-2.15.4.jar:/Users/habimanaflorbert/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.4/jackson-core-2.15.4.jar:/Users/habimanaflorbert/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-ui/2.3.0/springdoc-openapi-starter-webmvc-ui-2.3.0.jar:/Users/habimanaflorbert/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-api/2.3.0/springdoc-openapi-starter-webmvc-api-2.3.0.jar:/Users/habimanaflorbert/.m2/repository/org/springdoc/springdoc-openapi-starter-common/2.3.0/springdoc-openapi-starter-common-2.3.0.jar:/Users/habimanaflorbert/.m2/repository/io/swagger/core/v3/swagger-core-jakarta/2.2.19/swagger-core-jakarta-2.2.19.jar:/Users/habimanaflorbert/.m2/repository/org/apache/commons/commons-lang3/3.13.0/commons-lang3-3.13.0.jar:/Users/habimanaflorbert/.m2/repository/io/swagger/core/v3/swagger-annotations-jakarta/2.2.19/swagger-annotations-jakarta-2.2.19.jar:/Users/habimanaflorbert/.m2/repository/io/swagger/core/v3/swagger-models-jakarta/2.2.19/swagger-models-jakarta-2.2.19.jar:/Users/habimanaflorbert/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.15.4/jackson-dataformat-yaml-2.15.4.jar:/Users/habimanaflorbert/.m2/repository/org/webjars/swagger-ui/5.10.3/swagger-ui-5.10.3.jar:/Users/habimanaflorbert/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar:/Users/habimanaflorbert/.m2/repository/org/mapstruct/mapstruct/1.5.5.Final/mapstruct-1.5.5.Final.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.2.5/spring-boot-starter-test-3.2.5.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/boot/spring-boot-test/3.2.5/spring-boot-test-3.2.5.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.2.5/spring-boot-test-autoconfigure-3.2.5.jar:/Users/habimanaflorbert/.m2/repository/com/jayway/jsonpath/json-path/2.9.0/json-path-2.9.0.jar:/Users/habimanaflorbert/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.2/jakarta.xml.bind-api-4.0.2.jar:/Users/habimanaflorbert/.m2/repository/net/minidev/json-smart/2.5.1/json-smart-2.5.1.jar:/Users/habimanaflorbert/.m2/repository/net/minidev/accessors-smart/2.5.1/accessors-smart-2.5.1.jar:/Users/habimanaflorbert/.m2/repository/org/ow2/asm/asm/9.6/asm-9.6.jar:/Users/habimanaflorbert/.m2/repository/org/assertj/assertj-core/3.24.2/assertj-core-3.24.2.jar:/Users/habimanaflorbert/.m2/repository/org/awaitility/awaitility/4.2.1/awaitility-4.2.1.jar:/Users/habimanaflorbert/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/habimanaflorbert/.m2/repository/org/junit/jupiter/junit-jupiter/5.10.2/junit-jupiter-5.10.2.jar:/Users/habimanaflorbert/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.10.2/junit-jupiter-params-5.10.2.jar:/Users/habimanaflorbert/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.10.2/junit-jupiter-engine-5.10.2.jar:/Users/habimanaflorbert/.m2/repository/org/junit/platform/junit-platform-engine/1.10.2/junit-platform-engine-1.10.2.jar:/Users/habimanaflorbert/.m2/repository/org/skyscreamer/jsonassert/1.5.1/jsonassert-1.5.1.jar:/Users/habimanaflorbert/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/spring-core/6.1.6/spring-core-6.1.6.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/spring-jcl/6.1.6/spring-jcl-6.1.6.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/spring-test/6.1.6/spring-test-6.1.6.jar:/Users/habimanaflorbert/.m2/repository/org/xmlunit/xmlunit-core/2.9.1/xmlunit-core-2.9.1.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/security/spring-security-test/6.2.4/spring-security-test-6.2.4.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/security/spring-security-core/6.2.4/spring-security-core-6.2.4.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/security/spring-security-crypto/6.2.4/spring-security-crypto-6.2.4.jar:/Users/habimanaflorbert/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.10.0/junit-jupiter-api-5.10.0.jar:/Users/habimanaflorbert/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/habimanaflorbert/.m2/repository/org/junit/platform/junit-platform-commons/1.10.2/junit-platform-commons-1.10.2.jar:/Users/habimanaflorbert/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/habimanaflorbert/.m2/repository/org/mockito/mockito-core/5.7.0/mockito-core-5.7.0.jar:/Users/habimanaflorbert/.m2/repository/net/bytebuddy/byte-buddy/1.14.13/byte-buddy-1.14.13.jar:/Users/habimanaflorbert/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.13/byte-buddy-agent-1.14.13.jar:/Users/habimanaflorbert/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/habimanaflorbert/.m2/repository/org/mockito/mockito-junit-jupiter/5.7.0/mockito-junit-jupiter-5.7.0.jar:/Users/habimanaflorbert/.m2/repository/com/h2database/h2/2.2.224/h2-2.2.224.jar:/Users/habimanaflorbert/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/habimanaflorbert/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/habimanaflorbert/.m2/repository/jakarta/servlet/jakarta.servlet-api/6.0.0/jakarta.servlet-api-6.0.0.jar:"/>
    <property name="java.vm.vendor" value="Homebrew"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://github.com/Homebrew/homebrew-core/issues"/>
    <property name="user.timezone" value="Africa/Kigali"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="java.vm.specification.version" value="17"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="RW"/>
    <property name="sun.boot.library.path" value="/opt/homebrew/Cellar/openjdk@17/17.0.15/libexec/openjdk.jdk/Contents/Home/lib"/>
    <property name="sun.java.command" value="/Users/habimanaflorbert/Documents/spring_boot_projects/online_marketplace_backend/target/surefire/surefirebooter-20250502124227458_3.jar /Users/habimanaflorbert/Documents/spring_boot_projects/online_marketplace_backend/target/surefire 2025-05-02T12-42-27_410-jvmRun1 surefire-20250502124227458_1tmp surefire_0-20250502124227458_2tmp"/>
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/Users/habimanaflorbert/Documents/spring_boot_projects/online_marketplace_backend/target/test-classes:/Users/habimanaflorbert/Documents/spring_boot_projects/online_marketplace_backend/target/classes:/Users/habimanaflorbert/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.2.5/spring-boot-starter-web-3.2.5.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/boot/spring-boot-starter/3.2.5/spring-boot-starter-3.2.5.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/boot/spring-boot/3.2.5/spring-boot-3.2.5.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.2.5/spring-boot-autoconfigure-3.2.5.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.2.5/spring-boot-starter-logging-3.2.5.jar:/Users/habimanaflorbert/.m2/repository/ch/qos/logback/logback-classic/1.4.14/logback-classic-1.4.14.jar:/Users/habimanaflorbert/.m2/repository/ch/qos/logback/logback-core/1.4.14/logback-core-1.4.14.jar:/Users/habimanaflorbert/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.21.1/log4j-to-slf4j-2.21.1.jar:/Users/habimanaflorbert/.m2/repository/org/apache/logging/log4j/log4j-api/2.21.1/log4j-api-2.21.1.jar:/Users/habimanaflorbert/.m2/repository/org/slf4j/jul-to-slf4j/2.0.13/jul-to-slf4j-2.0.13.jar:/Users/habimanaflorbert/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/Users/habimanaflorbert/.m2/repository/org/yaml/snakeyaml/2.2/snakeyaml-2.2.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.2.5/spring-boot-starter-json-3.2.5.jar:/Users/habimanaflorbert/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.4/jackson-datatype-jdk8-2.15.4.jar:/Users/habimanaflorbert/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.4/jackson-datatype-jsr310-2.15.4.jar:/Users/habimanaflorbert/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.15.4/jackson-module-parameter-names-2.15.4.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.2.5/spring-boot-starter-tomcat-3.2.5.jar:/Users/habimanaflorbert/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.20/tomcat-embed-core-10.1.20.jar:/Users/habimanaflorbert/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.20/tomcat-embed-websocket-10.1.20.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/spring-web/6.1.6/spring-web-6.1.6.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/spring-beans/6.1.6/spring-beans-6.1.6.jar:/Users/habimanaflorbert/.m2/repository/io/micrometer/micrometer-observation/1.12.5/micrometer-observation-1.12.5.jar:/Users/habimanaflorbert/.m2/repository/io/micrometer/micrometer-commons/1.12.5/micrometer-commons-1.12.5.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/spring-webmvc/6.1.6/spring-webmvc-6.1.6.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/spring-context/6.1.6/spring-context-6.1.6.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/spring-expression/6.1.6/spring-expression-6.1.6.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.2.5/spring-boot-starter-data-jpa-3.2.5.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/boot/spring-boot-starter-aop/3.2.5/spring-boot-starter-aop-3.2.5.jar:/Users/habimanaflorbert/.m2/repository/org/aspectj/aspectjweaver/1.9.22/aspectjweaver-1.9.22.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.2.5/spring-boot-starter-jdbc-3.2.5.jar:/Users/habimanaflorbert/.m2/repository/com/zaxxer/HikariCP/5.0.1/HikariCP-5.0.1.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/spring-jdbc/6.1.6/spring-jdbc-6.1.6.jar:/Users/habimanaflorbert/.m2/repository/org/hibernate/orm/hibernate-core/6.4.4.Final/hibernate-core-6.4.4.Final.jar:/Users/habimanaflorbert/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/habimanaflorbert/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/habimanaflorbert/.m2/repository/org/jboss/logging/jboss-logging/3.5.3.Final/jboss-logging-3.5.3.Final.jar:/Users/habimanaflorbert/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/habimanaflorbert/.m2/repository/io/smallrye/jandex/3.1.2/jandex-3.1.2.jar:/Users/habimanaflorbert/.m2/repository/com/fasterxml/classmate/1.6.0/classmate-1.6.0.jar:/Users/habimanaflorbert/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.5/jaxb-runtime-4.0.5.jar:/Users/habimanaflorbert/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.5/jaxb-core-4.0.5.jar:/Users/habimanaflorbert/.m2/repository/org/glassfish/jaxb/txw2/4.0.5/txw2-4.0.5.jar:/Users/habimanaflorbert/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/Users/habimanaflorbert/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/habimanaflorbert/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/data/spring-data-jpa/3.2.5/spring-data-jpa-3.2.5.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/data/spring-data-commons/3.2.5/spring-data-commons-3.2.5.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/spring-orm/6.1.6/spring-orm-6.1.6.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/spring-tx/6.1.6/spring-tx-6.1.6.jar:/Users/habimanaflorbert/.m2/repository/org/slf4j/slf4j-api/2.0.13/slf4j-api-2.0.13.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/spring-aspects/6.1.6/spring-aspects-6.1.6.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/boot/spring-boot-starter-security/3.2.5/spring-boot-starter-security-3.2.5.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/spring-aop/6.1.6/spring-aop-6.1.6.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/security/spring-security-config/6.2.4/spring-security-config-6.2.4.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/security/spring-security-web/6.2.4/spring-security-web-6.2.4.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.2.5/spring-boot-starter-validation-3.2.5.jar:/Users/habimanaflorbert/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.20/tomcat-embed-el-10.1.20.jar:/Users/habimanaflorbert/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.1.Final/hibernate-validator-8.0.1.Final.jar:/Users/habimanaflorbert/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/boot/spring-boot-starter-mail/3.2.5/spring-boot-starter-mail-3.2.5.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/spring-context-support/6.1.6/spring-context-support-6.1.6.jar:/Users/habimanaflorbert/.m2/repository/org/eclipse/angus/jakarta.mail/2.0.3/jakarta.mail-2.0.3.jar:/Users/habimanaflorbert/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.3/jakarta.activation-api-2.1.3.jar:/Users/habimanaflorbert/.m2/repository/org/eclipse/angus/angus-activation/2.0.2/angus-activation-2.0.2.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/boot/spring-boot-starter-amqp/3.2.5/spring-boot-starter-amqp-3.2.5.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/spring-messaging/6.1.6/spring-messaging-6.1.6.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/amqp/spring-rabbit/3.1.4/spring-rabbit-3.1.4.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/amqp/spring-amqp/3.1.4/spring-amqp-3.1.4.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/retry/spring-retry/2.0.5/spring-retry-2.0.5.jar:/Users/habimanaflorbert/.m2/repository/com/rabbitmq/amqp-client/5.19.0/amqp-client-5.19.0.jar:/Users/habimanaflorbert/.m2/repository/org/postgresql/postgresql/42.6.2/postgresql-42.6.2.jar:/Users/habimanaflorbert/.m2/repository/org/checkerframework/checker-qual/3.31.0/checker-qual-3.31.0.jar:/Users/habimanaflorbert/.m2/repository/io/jsonwebtoken/jjwt-api/0.11.5/jjwt-api-0.11.5.jar:/Users/habimanaflorbert/.m2/repository/io/jsonwebtoken/jjwt-impl/0.11.5/jjwt-impl-0.11.5.jar:/Users/habimanaflorbert/.m2/repository/io/jsonwebtoken/jjwt-jackson/0.11.5/jjwt-jackson-0.11.5.jar:/Users/habimanaflorbert/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.4/jackson-databind-2.15.4.jar:/Users/habimanaflorbert/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.4/jackson-annotations-2.15.4.jar:/Users/habimanaflorbert/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.4/jackson-core-2.15.4.jar:/Users/habimanaflorbert/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-ui/2.3.0/springdoc-openapi-starter-webmvc-ui-2.3.0.jar:/Users/habimanaflorbert/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-api/2.3.0/springdoc-openapi-starter-webmvc-api-2.3.0.jar:/Users/habimanaflorbert/.m2/repository/org/springdoc/springdoc-openapi-starter-common/2.3.0/springdoc-openapi-starter-common-2.3.0.jar:/Users/habimanaflorbert/.m2/repository/io/swagger/core/v3/swagger-core-jakarta/2.2.19/swagger-core-jakarta-2.2.19.jar:/Users/habimanaflorbert/.m2/repository/org/apache/commons/commons-lang3/3.13.0/commons-lang3-3.13.0.jar:/Users/habimanaflorbert/.m2/repository/io/swagger/core/v3/swagger-annotations-jakarta/2.2.19/swagger-annotations-jakarta-2.2.19.jar:/Users/habimanaflorbert/.m2/repository/io/swagger/core/v3/swagger-models-jakarta/2.2.19/swagger-models-jakarta-2.2.19.jar:/Users/habimanaflorbert/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.15.4/jackson-dataformat-yaml-2.15.4.jar:/Users/habimanaflorbert/.m2/repository/org/webjars/swagger-ui/5.10.3/swagger-ui-5.10.3.jar:/Users/habimanaflorbert/.m2/repository/org/projectlombok/lombok/1.18.30/lombok-1.18.30.jar:/Users/habimanaflorbert/.m2/repository/org/mapstruct/mapstruct/1.5.5.Final/mapstruct-1.5.5.Final.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.2.5/spring-boot-starter-test-3.2.5.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/boot/spring-boot-test/3.2.5/spring-boot-test-3.2.5.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.2.5/spring-boot-test-autoconfigure-3.2.5.jar:/Users/habimanaflorbert/.m2/repository/com/jayway/jsonpath/json-path/2.9.0/json-path-2.9.0.jar:/Users/habimanaflorbert/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.2/jakarta.xml.bind-api-4.0.2.jar:/Users/habimanaflorbert/.m2/repository/net/minidev/json-smart/2.5.1/json-smart-2.5.1.jar:/Users/habimanaflorbert/.m2/repository/net/minidev/accessors-smart/2.5.1/accessors-smart-2.5.1.jar:/Users/habimanaflorbert/.m2/repository/org/ow2/asm/asm/9.6/asm-9.6.jar:/Users/habimanaflorbert/.m2/repository/org/assertj/assertj-core/3.24.2/assertj-core-3.24.2.jar:/Users/habimanaflorbert/.m2/repository/org/awaitility/awaitility/4.2.1/awaitility-4.2.1.jar:/Users/habimanaflorbert/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/Users/habimanaflorbert/.m2/repository/org/junit/jupiter/junit-jupiter/5.10.2/junit-jupiter-5.10.2.jar:/Users/habimanaflorbert/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.10.2/junit-jupiter-params-5.10.2.jar:/Users/habimanaflorbert/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.10.2/junit-jupiter-engine-5.10.2.jar:/Users/habimanaflorbert/.m2/repository/org/junit/platform/junit-platform-engine/1.10.2/junit-platform-engine-1.10.2.jar:/Users/habimanaflorbert/.m2/repository/org/skyscreamer/jsonassert/1.5.1/jsonassert-1.5.1.jar:/Users/habimanaflorbert/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/spring-core/6.1.6/spring-core-6.1.6.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/spring-jcl/6.1.6/spring-jcl-6.1.6.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/spring-test/6.1.6/spring-test-6.1.6.jar:/Users/habimanaflorbert/.m2/repository/org/xmlunit/xmlunit-core/2.9.1/xmlunit-core-2.9.1.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/security/spring-security-test/6.2.4/spring-security-test-6.2.4.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/security/spring-security-core/6.2.4/spring-security-core-6.2.4.jar:/Users/habimanaflorbert/.m2/repository/org/springframework/security/spring-security-crypto/6.2.4/spring-security-crypto-6.2.4.jar:/Users/habimanaflorbert/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.10.0/junit-jupiter-api-5.10.0.jar:/Users/habimanaflorbert/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/Users/habimanaflorbert/.m2/repository/org/junit/platform/junit-platform-commons/1.10.2/junit-platform-commons-1.10.2.jar:/Users/habimanaflorbert/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/Users/habimanaflorbert/.m2/repository/org/mockito/mockito-core/5.7.0/mockito-core-5.7.0.jar:/Users/habimanaflorbert/.m2/repository/net/bytebuddy/byte-buddy/1.14.13/byte-buddy-1.14.13.jar:/Users/habimanaflorbert/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.13/byte-buddy-agent-1.14.13.jar:/Users/habimanaflorbert/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/Users/habimanaflorbert/.m2/repository/org/mockito/mockito-junit-jupiter/5.7.0/mockito-junit-jupiter-5.7.0.jar:/Users/habimanaflorbert/.m2/repository/com/h2database/h2/2.2.224/h2-2.2.224.jar:/Users/habimanaflorbert/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/habimanaflorbert/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/habimanaflorbert/.m2/repository/jakarta/servlet/jakarta.servlet-api/6.0.0/jakarta.servlet-api-6.0.0.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/Users/habimanaflorbert"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2025-04-15"/>
    <property name="java.home" value="/opt/homebrew/Cellar/openjdk@17/17.0.15/libexec/openjdk.jdk/Contents/Home"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/Users/habimanaflorbert/Documents/spring_boot_projects/online_marketplace_backend"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="/Users/habimanaflorbert/Documents/spring_boot_projects/online_marketplace_backend/target/surefire/surefirebooter-20250502124227458_3.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.runtime.version" value="17.0.15+0"/>
    <property name="user.name" value="habimanaflorbert"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="15.4.1"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Homebrew"/>
    <property name="localRepository" value="/Users/habimanaflorbert/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/Homebrew/homebrew-core/issues"/>
    <property name="java.io.tmpdir" value="/var/folders/6c/5_nm81g56pjbjjry4nyw3zn00000gn/T/"/>
    <property name="com.zaxxer.hikari.pool_number" value="1"/>
    <property name="java.version" value="17.0.15"/>
    <property name="user.dir" value="/Users/habimanaflorbert/Documents/spring_boot_projects/online_marketplace_backend"/>
    <property name="os.arch" value="aarch64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="49214"/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/Users/habimanaflorbert/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Homebrew"/>
    <property name="java.vm.version" value="17.0.15+0"/>
    <property name="java.specification.maintenance.version" value="1"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="java.class.version" value="61.0"/>
  </properties>
  <testcase name="updateReview_ShouldReturnUpdatedReview" classname="com.marketplace.controller.ReviewControllerIntegrationTest" time="0.133">
    <error message="could not execute statement [NULL not allowed for column &quot;CATEGORY_ID&quot;; SQL statement:&#10;insert into products (category_id,description,featured,name,price,stock,store_id,id) values (?,?,?,?,?,?,?,default) [23502-224]] [insert into products (category_id,description,featured,name,price,stock,store_id,id) values (?,?,?,?,?,?,?,default)]; SQL [insert into products (category_id,description,featured,name,price,stock,store_id,id) values (?,?,?,?,?,?,?,default)]; constraint [null]" type="org.springframework.dao.DataIntegrityViolationException"><![CDATA[org.springframework.dao.DataIntegrityViolationException: 
could not execute statement [NULL not allowed for column "CATEGORY_ID"; SQL statement:
insert into products (category_id,description,featured,name,price,stock,store_id,id) values (?,?,?,?,?,?,?,default) [23502-224]] [insert into products (category_id,description,featured,name,price,stock,store_id,id) values (?,?,?,?,?,?,?,default)]; SQL [insert into products (category_id,description,featured,name,price,stock,store_id,id) values (?,?,?,?,?,?,?,default)]; constraint [null]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:290)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy197.save(Unknown Source)
	at com.marketplace.controller.ReviewControllerIntegrationTest.updateReview_ShouldReturnUpdatedReview(ReviewControllerIntegrationTest.java:140)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement [NULL not allowed for column "CATEGORY_ID"; SQL statement:
insert into products (category_id,description,featured,name,price,stock,store_id,id) values (?,?,?,?,?,?,?,default) [23502-224]] [insert into products (category_id,description,featured,name,price,stock,store_id,id) values (?,?,?,?,?,?,?,default)]
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:62)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.id.insert.GetGeneratedKeysDelegate.performInsert(GetGeneratedKeysDelegate.java:107)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorPostInsertSingleTable.execute(MutationExecutorPostInsertSingleTable.java:100)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:175)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:113)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2868)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:670)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:291)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:272)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:322)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:386)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:300)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:219)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:754)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:738)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:319)
	at jdk.proxy2/jdk.proxy2.$Proxy183.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 11 more
Caused by: org.h2.jdbc.JdbcSQLIntegrityConstraintViolationException: NULL not allowed for column "CATEGORY_ID"; SQL statement:
insert into products (category_id,description,featured,name,price,stock,store_id,id) values (?,?,?,?,?,?,?,default) [23502-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:520)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:365)
	at org.h2.table.Table.convertInsertRow(Table.java:936)
	at org.h2.command.dml.Insert.insertRows(Insert.java:167)
	at org.h2.command.dml.Insert.update(Insert.java:135)
	at org.h2.command.CommandContainer.executeUpdateWithGeneratedKeys(CommandContainer.java:242)
	at org.h2.command.CommandContainer.update(CommandContainer.java:163)
	at org.h2.command.Command.executeUpdate(Command.java:256)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:216)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:174)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	... 61 more
]]></error>
    <system-out><![CDATA[12:42:29.202 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.marketplace.controller.ReviewControllerIntegrationTest]: ReviewControllerIntegrationTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
12:42:29.292 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.marketplace.OnlineMarketplaceApplication for test class com.marketplace.controller.ReviewControllerIntegrationTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.5)

2025-05-02T12:42:29.518+02:00  INFO 49214 --- [           main] c.m.c.ReviewControllerIntegrationTest    : Starting ReviewControllerIntegrationTest using Java 17.0.15 with PID 49214 (started by habimanaflorbert in /Users/habimanaflorbert/Documents/spring_boot_projects/online_marketplace_backend)
2025-05-02T12:42:29.518+02:00 DEBUG 49214 --- [           main] c.m.c.ReviewControllerIntegrationTest    : Running with Spring Boot v3.2.5, Spring v6.1.6
2025-05-02T12:42:29.518+02:00  INFO 49214 --- [           main] c.m.c.ReviewControllerIntegrationTest    : No active profile set, falling back to 1 default profile: "default"
2025-05-02T12:42:29.988+02:00  INFO 49214 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-02T12:42:30.030+02:00  INFO 49214 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 37 ms. Found 6 JPA repository interfaces.
2025-05-02T12:42:30.346+02:00  INFO 49214 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-02T12:42:30.384+02:00  INFO 49214 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.4.4.Final
2025-05-02T12:42:30.400+02:00  INFO 49214 --- [           main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-05-02T12:42:30.449+02:00  INFO 49214 --- [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-02T12:42:30.464+02:00  INFO 49214 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-05-02T12:42:30.570+02:00  INFO 49214 --- [           main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-05-02T12:42:30.571+02:00  INFO 49214 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-05-02T12:42:30.584+02:00  WARN 49214 --- [           main] org.hibernate.orm.deprecation            : HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-02T12:42:31.051+02:00  INFO 49214 --- [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: 
    drop table if exists categories cascade 
Hibernate: 
    drop table if exists order_items cascade 
Hibernate: 
    drop table if exists orders cascade 
Hibernate: 
    drop table if exists product_tags cascade 
Hibernate: 
    drop table if exists products cascade 
Hibernate: 
    drop table if exists reviews cascade 
Hibernate: 
    drop table if exists stores cascade 
Hibernate: 
    drop table if exists users cascade 
Hibernate: 
    create table categories (
        id bigint generated by default as identity,
        description varchar(500),
        name varchar(255) not null unique,
        primary key (id)
    )
Hibernate: 
    create table order_items (
        price numeric(38,2) not null,
        quantity integer not null,
        subtotal numeric(38,2) not null,
        id bigint generated by default as identity,
        order_id bigint not null,
        product_id bigint not null,
        primary key (id)
    )
Hibernate: 
    create table orders (
        total_amount numeric(38,2) not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        store_id bigint not null,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('PENDING','PROCESSING','SHIPPED','DELIVERED','CANCELLED')),
        primary key (id)
    )
Hibernate: 
    create table product_tags (
        product_id bigint not null,
        tag varchar(255)
    )
Hibernate: 
    create table products (
        featured boolean not null,
        price numeric(38,2) not null,
        category_id bigint not null,
        id bigint generated by default as identity,
        stock bigint not null,
        store_id bigint not null,
        description varchar(1000),
        name varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table reviews (
        rating integer not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        user_id bigint not null,
        comment varchar(1000),
        primary key (id)
    )
Hibernate: 
    create table stores (
        id bigint generated by default as identity,
        owner_id bigint not null unique,
        description varchar(500),
        name varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table users (
        enabled boolean not null,
        id bigint generated by default as identity,
        email varchar(255) not null unique,
        name varchar(255) not null,
        password varchar(255) not null,
        role varchar(255) not null check (role in ('ADMIN','SELLER','SHOPPER')),
        verification_token varchar(255),
        primary key (id)
    )
Hibernate: 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
Hibernate: 
    alter table if exists order_items 
       add constraint FKocimc7dtr037rh4ls4l95nlfi 
       foreign key (product_id) 
       references products
Hibernate: 
    alter table if exists orders 
       add constraint FKnqkwhwveegs6ne9ra90y1gq0e 
       foreign key (store_id) 
       references stores
Hibernate: 
    alter table if exists orders 
       add constraint FK32ql8ubntj5uh44ph9659tiih 
       foreign key (user_id) 
       references users
Hibernate: 
    alter table if exists product_tags 
       add constraint FK5rk6s19k3risy7q7wqdr41uss 
       foreign key (product_id) 
       references products
Hibernate: 
    alter table if exists products 
       add constraint FKog2rp4qthbtt2lfyhfo32lsw9 
       foreign key (category_id) 
       references categories
Hibernate: 
    alter table if exists products 
       add constraint FKgcyffheofvmy2x5l78xam63mc 
       foreign key (store_id) 
       references stores
Hibernate: 
    alter table if exists reviews 
       add constraint FKpl51cejpw4gy5swfar8br9ngi 
       foreign key (product_id) 
       references products
Hibernate: 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
Hibernate: 
    alter table if exists stores 
       add constraint FK62smc31fbgclsu56aa4y2hrxg 
       foreign key (owner_id) 
       references users
2025-05-02T12:42:31.090+02:00  INFO 49214 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-02T12:42:31.278+02:00  INFO 49214 --- [           main] com.marketplace.security.JwtUtil         : JWT secret key initialized
2025-05-02T12:42:31.611+02:00  WARN 49214 --- [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-02T12:42:31.751+02:00  INFO 49214 --- [           main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1b256636, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7aab77f, org.springframework.security.web.context.SecurityContextHolderFilter@1df19e91, org.springframework.security.web.header.HeaderWriterFilter@5dd52021, org.springframework.web.filter.CorsFilter@788b0c96, org.springframework.security.web.authentication.logout.LogoutFilter@e7283dd, com.marketplace.security.JwtAuthenticationFilter@28566aad, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2254919b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@45354715, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@45dac901, org.springframework.security.web.session.SessionManagementFilter@7f6a0ab, org.springframework.security.web.access.ExceptionTranslationFilter@37c55315, org.springframework.security.web.access.intercept.AuthorizationFilter@74d926a0]
2025-05-02T12:42:31.754+02:00  WARN 49214 --- [           main] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2025-05-02T12:42:31.754+02:00  INFO 49214 --- [           main] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/v3/api-docs/**']
2025-05-02T12:42:31.754+02:00  WARN 49214 --- [           main] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2025-05-02T12:42:31.754+02:00  INFO 49214 --- [           main] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger-ui/**']
2025-05-02T12:42:31.754+02:00  WARN 49214 --- [           main] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Ant [pattern='/swagger-ui.html']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2025-05-02T12:42:31.754+02:00  INFO 49214 --- [           main] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Ant [pattern='/swagger-ui.html']
2025-05-02T12:42:31.978+02:00 DEBUG 49214 --- [           main] c.m.security.JwtAuthenticationFilter     : Filter 'jwtAuthenticationFilter' configured for use
2025-05-02T12:42:31.979+02:00  INFO 49214 --- [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-05-02T12:42:31.979+02:00  INFO 49214 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-05-02T12:42:31.979+02:00  INFO 49214 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 0 ms
2025-05-02T12:42:32.003+02:00  INFO 49214 --- [           main] o.s.a.r.c.CachingConnectionFactory       : Attempting to connect to: [localhost:5672]
2025-05-02T12:42:32.044+02:00  INFO 49214 --- [           main] o.s.a.r.c.CachingConnectionFactory       : Created new connection: rabbitConnectionFactory#412b4aed:0/SimpleConnection@23618fa2 [delegate=amqp://guest@127.0.0.1:5672/, localPort=51457]
2025-05-02T12:42:32.076+02:00  INFO 49214 --- [           main] c.m.c.ReviewControllerIntegrationTest    : Started ReviewControllerIntegrationTest in 2.712 seconds (process running for 4.568)
2025-05-02T12:42:32.090+02:00  INFO 49214 --- [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-05-02T12:42:32.090+02:00  INFO 49214 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-05-02T12:42:32.091+02:00  INFO 49214 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
Hibernate: 
    select
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.product_id,
        r1_0.rating,
        r1_0.user_id 
    from
        reviews r1_0
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.name,
        u1_0.password,
        u1_0.role,
        u1_0.verification_token 
    from
        users u1_0
Hibernate: 
    select
        p1_0.id,
        p1_0.category_id,
        p1_0.description,
        p1_0.featured,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.store_id 
    from
        products p1_0
Hibernate: 
    insert 
    into
        users
        (email, enabled, name, password, role, verification_token, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        products
        (category_id, description, featured, name, price, stock, store_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-05-02T12:42:32.210+02:00  WARN 49214 --- [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 23502, SQLState: 23502
2025-05-02T12:42:32.210+02:00 ERROR 49214 --- [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : NULL not allowed for column "CATEGORY_ID"; SQL statement:
insert into products (category_id,description,featured,name,price,stock,store_id,id) values (?,?,?,?,?,?,?,default) [23502-224]
]]></system-out>
  </testcase>
  <testcase name="createReview_ShouldReturnCreatedReview" classname="com.marketplace.controller.ReviewControllerIntegrationTest" time="0.037">
    <error message="could not execute statement [NULL not allowed for column &quot;CATEGORY_ID&quot;; SQL statement:&#10;insert into products (category_id,description,featured,name,price,stock,store_id,id) values (?,?,?,?,?,?,?,default) [23502-224]] [insert into products (category_id,description,featured,name,price,stock,store_id,id) values (?,?,?,?,?,?,?,default)]; SQL [insert into products (category_id,description,featured,name,price,stock,store_id,id) values (?,?,?,?,?,?,?,default)]; constraint [null]" type="org.springframework.dao.DataIntegrityViolationException"><![CDATA[org.springframework.dao.DataIntegrityViolationException: 
could not execute statement [NULL not allowed for column "CATEGORY_ID"; SQL statement:
insert into products (category_id,description,featured,name,price,stock,store_id,id) values (?,?,?,?,?,?,?,default) [23502-224]] [insert into products (category_id,description,featured,name,price,stock,store_id,id) values (?,?,?,?,?,?,?,default)]; SQL [insert into products (category_id,description,featured,name,price,stock,store_id,id) values (?,?,?,?,?,?,?,default)]; constraint [null]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:290)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy197.save(Unknown Source)
	at com.marketplace.controller.ReviewControllerIntegrationTest.createReview_ShouldReturnCreatedReview(ReviewControllerIntegrationTest.java:70)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement [NULL not allowed for column "CATEGORY_ID"; SQL statement:
insert into products (category_id,description,featured,name,price,stock,store_id,id) values (?,?,?,?,?,?,?,default) [23502-224]] [insert into products (category_id,description,featured,name,price,stock,store_id,id) values (?,?,?,?,?,?,?,default)]
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:62)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.id.insert.GetGeneratedKeysDelegate.performInsert(GetGeneratedKeysDelegate.java:107)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorPostInsertSingleTable.execute(MutationExecutorPostInsertSingleTable.java:100)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:175)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:113)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2868)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:670)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:291)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:272)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:322)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:386)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:300)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:219)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:754)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:738)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:319)
	at jdk.proxy2/jdk.proxy2.$Proxy183.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 11 more
Caused by: org.h2.jdbc.JdbcSQLIntegrityConstraintViolationException: NULL not allowed for column "CATEGORY_ID"; SQL statement:
insert into products (category_id,description,featured,name,price,stock,store_id,id) values (?,?,?,?,?,?,?,default) [23502-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:520)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:365)
	at org.h2.table.Table.convertInsertRow(Table.java:936)
	at org.h2.command.dml.Insert.insertRows(Insert.java:167)
	at org.h2.command.dml.Insert.update(Insert.java:135)
	at org.h2.command.CommandContainer.executeUpdateWithGeneratedKeys(CommandContainer.java:242)
	at org.h2.command.CommandContainer.update(CommandContainer.java:163)
	at org.h2.command.Command.executeUpdate(Command.java:256)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:216)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:174)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	... 61 more
]]></error>
    <system-out><![CDATA[2025-05-02T12:42:32.219+02:00  INFO 49214 --- [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-05-02T12:42:32.219+02:00  INFO 49214 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-05-02T12:42:32.220+02:00  INFO 49214 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
Hibernate: 
    select
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.product_id,
        r1_0.rating,
        r1_0.user_id 
    from
        reviews r1_0
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.name,
        u1_0.password,
        u1_0.role,
        u1_0.verification_token 
    from
        users u1_0
Hibernate: 
    select
        s1_0.id,
        s1_0.description,
        s1_0.name,
        s1_0.owner_id,
        o1_0.id,
        o1_0.email,
        o1_0.enabled,
        o1_0.name,
        o1_0.password,
        o1_0.role,
        o1_0.verification_token 
    from
        stores s1_0 
    join
        users o1_0 
            on o1_0.id=s1_0.owner_id 
    where
        s1_0.owner_id=?
Hibernate: 
    select
        o1_0.user_id,
        o1_0.id,
        o1_0.created_at,
        o1_0.status,
        o1_0.store_id,
        s1_0.id,
        s1_0.description,
        s1_0.name,
        s1_0.owner_id,
        o2_0.id,
        o2_0.email,
        o2_0.enabled,
        o2_0.name,
        o2_0.password,
        o2_0.role,
        o2_0.verification_token,
        o1_0.total_amount,
        o1_0.updated_at 
    from
        orders o1_0 
    left join
        stores s1_0 
            on s1_0.id=o1_0.store_id 
    left join
        users o2_0 
            on o2_0.id=s1_0.owner_id 
    where
        o1_0.user_id=?
Hibernate: 
    select
        r1_0.user_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.product_id,
        p1_0.id,
        p1_0.category_id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        p1_0.description,
        p1_0.featured,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.store_id,
        s1_0.id,
        s1_0.description,
        s1_0.name,
        s1_0.owner_id,
        o1_0.id,
        o1_0.email,
        o1_0.enabled,
        o1_0.name,
        o1_0.password,
        o1_0.role,
        o1_0.verification_token,
        r1_0.rating 
    from
        reviews r1_0 
    left join
        products p1_0 
            on p1_0.id=r1_0.product_id 
    left join
        categories c1_0 
            on c1_0.id=p1_0.category_id 
    left join
        stores s1_0 
            on s1_0.id=p1_0.store_id 
    left join
        users o1_0 
            on o1_0.id=s1_0.owner_id 
    where
        r1_0.user_id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.category_id,
        p1_0.description,
        p1_0.featured,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.store_id 
    from
        products p1_0
Hibernate: 
    insert 
    into
        users
        (email, enabled, name, password, role, verification_token, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        products
        (category_id, description, featured, name, price, stock, store_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-05-02T12:42:32.253+02:00  WARN 49214 --- [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 23502, SQLState: 23502
2025-05-02T12:42:32.253+02:00 ERROR 49214 --- [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : NULL not allowed for column "CATEGORY_ID"; SQL statement:
insert into products (category_id,description,featured,name,price,stock,store_id,id) values (?,?,?,?,?,?,?,default) [23502-224]
]]></system-out>
  </testcase>
  <testcase name="deleteReview_ShouldReturnNoContent" classname="com.marketplace.controller.ReviewControllerIntegrationTest" time="0.014">
    <error message="could not execute statement [NULL not allowed for column &quot;CATEGORY_ID&quot;; SQL statement:&#10;insert into products (category_id,description,featured,name,price,stock,store_id,id) values (?,?,?,?,?,?,?,default) [23502-224]] [insert into products (category_id,description,featured,name,price,stock,store_id,id) values (?,?,?,?,?,?,?,default)]; SQL [insert into products (category_id,description,featured,name,price,stock,store_id,id) values (?,?,?,?,?,?,?,default)]; constraint [null]" type="org.springframework.dao.DataIntegrityViolationException"><![CDATA[org.springframework.dao.DataIntegrityViolationException: 
could not execute statement [NULL not allowed for column "CATEGORY_ID"; SQL statement:
insert into products (category_id,description,featured,name,price,stock,store_id,id) values (?,?,?,?,?,?,?,default) [23502-224]] [insert into products (category_id,description,featured,name,price,stock,store_id,id) values (?,?,?,?,?,?,?,default)]; SQL [insert into products (category_id,description,featured,name,price,stock,store_id,id) values (?,?,?,?,?,?,?,default)]; constraint [null]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:290)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy197.save(Unknown Source)
	at com.marketplace.controller.ReviewControllerIntegrationTest.deleteReview_ShouldReturnNoContent(ReviewControllerIntegrationTest.java:182)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement [NULL not allowed for column "CATEGORY_ID"; SQL statement:
insert into products (category_id,description,featured,name,price,stock,store_id,id) values (?,?,?,?,?,?,?,default) [23502-224]] [insert into products (category_id,description,featured,name,price,stock,store_id,id) values (?,?,?,?,?,?,?,default)]
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:62)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.id.insert.GetGeneratedKeysDelegate.performInsert(GetGeneratedKeysDelegate.java:107)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorPostInsertSingleTable.execute(MutationExecutorPostInsertSingleTable.java:100)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:175)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:113)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2868)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:670)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:291)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:272)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:322)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:386)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:300)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:219)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:754)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:738)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:319)
	at jdk.proxy2/jdk.proxy2.$Proxy183.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 11 more
Caused by: org.h2.jdbc.JdbcSQLIntegrityConstraintViolationException: NULL not allowed for column "CATEGORY_ID"; SQL statement:
insert into products (category_id,description,featured,name,price,stock,store_id,id) values (?,?,?,?,?,?,?,default) [23502-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:520)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:365)
	at org.h2.table.Table.convertInsertRow(Table.java:936)
	at org.h2.command.dml.Insert.insertRows(Insert.java:167)
	at org.h2.command.dml.Insert.update(Insert.java:135)
	at org.h2.command.CommandContainer.executeUpdateWithGeneratedKeys(CommandContainer.java:242)
	at org.h2.command.CommandContainer.update(CommandContainer.java:163)
	at org.h2.command.Command.executeUpdate(Command.java:256)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:216)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:174)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	... 61 more
]]></error>
    <system-out><![CDATA[2025-05-02T12:42:32.257+02:00  INFO 49214 --- [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-05-02T12:42:32.257+02:00  INFO 49214 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-05-02T12:42:32.257+02:00  INFO 49214 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 0 ms
Hibernate: 
    select
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.product_id,
        r1_0.rating,
        r1_0.user_id 
    from
        reviews r1_0
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.name,
        u1_0.password,
        u1_0.role,
        u1_0.verification_token 
    from
        users u1_0
Hibernate: 
    select
        s1_0.id,
        s1_0.description,
        s1_0.name,
        s1_0.owner_id,
        o1_0.id,
        o1_0.email,
        o1_0.enabled,
        o1_0.name,
        o1_0.password,
        o1_0.role,
        o1_0.verification_token 
    from
        stores s1_0 
    join
        users o1_0 
            on o1_0.id=s1_0.owner_id 
    where
        s1_0.owner_id=?
Hibernate: 
    select
        o1_0.user_id,
        o1_0.id,
        o1_0.created_at,
        o1_0.status,
        o1_0.store_id,
        s1_0.id,
        s1_0.description,
        s1_0.name,
        s1_0.owner_id,
        o2_0.id,
        o2_0.email,
        o2_0.enabled,
        o2_0.name,
        o2_0.password,
        o2_0.role,
        o2_0.verification_token,
        o1_0.total_amount,
        o1_0.updated_at 
    from
        orders o1_0 
    left join
        stores s1_0 
            on s1_0.id=o1_0.store_id 
    left join
        users o2_0 
            on o2_0.id=s1_0.owner_id 
    where
        o1_0.user_id=?
Hibernate: 
    select
        r1_0.user_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.product_id,
        p1_0.id,
        p1_0.category_id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        p1_0.description,
        p1_0.featured,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.store_id,
        s1_0.id,
        s1_0.description,
        s1_0.name,
        s1_0.owner_id,
        o1_0.id,
        o1_0.email,
        o1_0.enabled,
        o1_0.name,
        o1_0.password,
        o1_0.role,
        o1_0.verification_token,
        r1_0.rating 
    from
        reviews r1_0 
    left join
        products p1_0 
            on p1_0.id=r1_0.product_id 
    left join
        categories c1_0 
            on c1_0.id=p1_0.category_id 
    left join
        stores s1_0 
            on s1_0.id=p1_0.store_id 
    left join
        users o1_0 
            on o1_0.id=s1_0.owner_id 
    where
        r1_0.user_id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.category_id,
        p1_0.description,
        p1_0.featured,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.store_id 
    from
        products p1_0
Hibernate: 
    insert 
    into
        users
        (email, enabled, name, password, role, verification_token, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        products
        (category_id, description, featured, name, price, stock, store_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-05-02T12:42:32.267+02:00  WARN 49214 --- [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 23502, SQLState: 23502
2025-05-02T12:42:32.267+02:00 ERROR 49214 --- [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : NULL not allowed for column "CATEGORY_ID"; SQL statement:
insert into products (category_id,description,featured,name,price,stock,store_id,id) values (?,?,?,?,?,?,?,default) [23502-224]
]]></system-out>
  </testcase>
  <testcase name="getReview_ShouldReturnReview" classname="com.marketplace.controller.ReviewControllerIntegrationTest" time="0.011">
    <error message="could not execute statement [NULL not allowed for column &quot;CATEGORY_ID&quot;; SQL statement:&#10;insert into products (category_id,description,featured,name,price,stock,store_id,id) values (?,?,?,?,?,?,?,default) [23502-224]] [insert into products (category_id,description,featured,name,price,stock,store_id,id) values (?,?,?,?,?,?,?,default)]; SQL [insert into products (category_id,description,featured,name,price,stock,store_id,id) values (?,?,?,?,?,?,?,default)]; constraint [null]" type="org.springframework.dao.DataIntegrityViolationException"><![CDATA[org.springframework.dao.DataIntegrityViolationException: 
could not execute statement [NULL not allowed for column "CATEGORY_ID"; SQL statement:
insert into products (category_id,description,featured,name,price,stock,store_id,id) values (?,?,?,?,?,?,?,default) [23502-224]] [insert into products (category_id,description,featured,name,price,stock,store_id,id) values (?,?,?,?,?,?,?,default)]; SQL [insert into products (category_id,description,featured,name,price,stock,store_id,id) values (?,?,?,?,?,?,?,default)]; constraint [null]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:290)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy197.save(Unknown Source)
	at com.marketplace.controller.ReviewControllerIntegrationTest.getReview_ShouldReturnReview(ReviewControllerIntegrationTest.java:106)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement [NULL not allowed for column "CATEGORY_ID"; SQL statement:
insert into products (category_id,description,featured,name,price,stock,store_id,id) values (?,?,?,?,?,?,?,default) [23502-224]] [insert into products (category_id,description,featured,name,price,stock,store_id,id) values (?,?,?,?,?,?,?,default)]
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:62)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.id.insert.GetGeneratedKeysDelegate.performInsert(GetGeneratedKeysDelegate.java:107)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorPostInsertSingleTable.execute(MutationExecutorPostInsertSingleTable.java:100)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:175)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:113)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2868)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:670)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:291)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:272)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:322)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:386)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:300)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:219)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:134)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)
	at org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:754)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:738)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:319)
	at jdk.proxy2/jdk.proxy2.$Proxy183.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:618)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 11 more
Caused by: org.h2.jdbc.JdbcSQLIntegrityConstraintViolationException: NULL not allowed for column "CATEGORY_ID"; SQL statement:
insert into products (category_id,description,featured,name,price,stock,store_id,id) values (?,?,?,?,?,?,?,default) [23502-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:520)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:365)
	at org.h2.table.Table.convertInsertRow(Table.java:936)
	at org.h2.command.dml.Insert.insertRows(Insert.java:167)
	at org.h2.command.dml.Insert.update(Insert.java:135)
	at org.h2.command.CommandContainer.executeUpdateWithGeneratedKeys(CommandContainer.java:242)
	at org.h2.command.CommandContainer.update(CommandContainer.java:163)
	at org.h2.command.Command.executeUpdate(Command.java:256)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:216)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:174)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:194)
	... 61 more
]]></error>
    <system-out><![CDATA[2025-05-02T12:42:32.271+02:00  INFO 49214 --- [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-05-02T12:42:32.271+02:00  INFO 49214 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-05-02T12:42:32.271+02:00  INFO 49214 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 0 ms
Hibernate: 
    select
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.product_id,
        r1_0.rating,
        r1_0.user_id 
    from
        reviews r1_0
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.name,
        u1_0.password,
        u1_0.role,
        u1_0.verification_token 
    from
        users u1_0
Hibernate: 
    select
        s1_0.id,
        s1_0.description,
        s1_0.name,
        s1_0.owner_id,
        o1_0.id,
        o1_0.email,
        o1_0.enabled,
        o1_0.name,
        o1_0.password,
        o1_0.role,
        o1_0.verification_token 
    from
        stores s1_0 
    join
        users o1_0 
            on o1_0.id=s1_0.owner_id 
    where
        s1_0.owner_id=?
Hibernate: 
    select
        o1_0.user_id,
        o1_0.id,
        o1_0.created_at,
        o1_0.status,
        o1_0.store_id,
        s1_0.id,
        s1_0.description,
        s1_0.name,
        s1_0.owner_id,
        o2_0.id,
        o2_0.email,
        o2_0.enabled,
        o2_0.name,
        o2_0.password,
        o2_0.role,
        o2_0.verification_token,
        o1_0.total_amount,
        o1_0.updated_at 
    from
        orders o1_0 
    left join
        stores s1_0 
            on s1_0.id=o1_0.store_id 
    left join
        users o2_0 
            on o2_0.id=s1_0.owner_id 
    where
        o1_0.user_id=?
Hibernate: 
    select
        r1_0.user_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.product_id,
        p1_0.id,
        p1_0.category_id,
        c1_0.id,
        c1_0.description,
        c1_0.name,
        p1_0.description,
        p1_0.featured,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.store_id,
        s1_0.id,
        s1_0.description,
        s1_0.name,
        s1_0.owner_id,
        o1_0.id,
        o1_0.email,
        o1_0.enabled,
        o1_0.name,
        o1_0.password,
        o1_0.role,
        o1_0.verification_token,
        r1_0.rating 
    from
        reviews r1_0 
    left join
        products p1_0 
            on p1_0.id=r1_0.product_id 
    left join
        categories c1_0 
            on c1_0.id=p1_0.category_id 
    left join
        stores s1_0 
            on s1_0.id=p1_0.store_id 
    left join
        users o1_0 
            on o1_0.id=s1_0.owner_id 
    where
        r1_0.user_id=?
Hibernate: 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.category_id,
        p1_0.description,
        p1_0.featured,
        p1_0.name,
        p1_0.price,
        p1_0.stock,
        p1_0.store_id 
    from
        products p1_0
Hibernate: 
    insert 
    into
        users
        (email, enabled, name, password, role, verification_token, id) 
    values
        (?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        products
        (category_id, description, featured, name, price, stock, store_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, default)
2025-05-02T12:42:32.280+02:00  WARN 49214 --- [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : SQL Error: 23502, SQLState: 23502
2025-05-02T12:42:32.280+02:00 ERROR 49214 --- [           main] o.h.engine.jdbc.spi.SqlExceptionHelper   : NULL not allowed for column "CATEGORY_ID"; SQL statement:
insert into products (category_id,description,featured,name,price,stock,store_id,id) values (?,?,?,?,?,?,?,default) [23502-224]
]]></system-out>
  </testcase>
</testsuite>